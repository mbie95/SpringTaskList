{
	"info": {
		"_postman_id": "2302650a-2a2f-4e0d-b107-07a9bb902fcc",
		"name": "tasklist",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "read and sort tasks",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/tasks?sort=description,desc",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks"
					],
					"query": [
						{
							"key": "Accept",
							"value": "text/xml",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "description,desc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
							"});",
							"",
							"pm.test(\"Location is present\", function () {",
							"    pm.response.to.have.header(\"Location\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"done\": false,\n    \"description\": \"def\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/tasks",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks"
					],
					"query": [
						{
							"key": "Accept",
							"value": "text/xml",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "patch task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check if description is changing\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.description).to.eql(\"postman\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"postman\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/tasks/3",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "put task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check if description and done are changing\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.description).to.eql(\"spring\");",
							"    pm.expect(jsonData.done).to.eql(true);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"spring\",\n    \"done\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/tasks/4",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks",
						"4"
					]
				}
			},
			"response": []
		},
		{
			"name": "read page size tasks",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/tasks?page=1&size=3",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "size",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "read tasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/tasks",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete tasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 205\", function () {",
							"    pm.response.to.have.status(205);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/tasks/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "create empty task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"",
							"pm.test(\"Body contains error message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors[0].value).to.eql(\"Lack of task's description\");",
							"});",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"done\": false,\n    \"description\": \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/tasks",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks"
					],
					"query": [
						{
							"key": "Accept",
							"value": "text/xml",
							"disabled": true
						}
					]
				},
				"description": "Validation and status 400"
			},
			"response": []
		},
		{
			"name": "create empty task tests",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"",
							"pm.test(\"Body contains error message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors[0].value).to.eql(\"Lack of task description\");",
							"});",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"done\": false,\n    \"description\": \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/tasks",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks"
					],
					"query": [
						{
							"key": "Accept",
							"value": "text/xml",
							"disabled": true
						}
					]
				},
				"description": "Validate error 400, error message tested"
			},
			"response": []
		}
	]
}